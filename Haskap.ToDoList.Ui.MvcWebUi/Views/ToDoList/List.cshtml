@using Haskap.ToDoList.Application.UseCaseServices.Dtos
@using Haskap.ToDoList.Application.UseCaseServices.Dtos.DataTable

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model Envelope<JqueryDataTableResult>

@{
    Pagination pagination = ViewBag.Pagination;
}

<div class="row">
    <div class="col-md-12">
        <!-- Widget: user widget style 2 -->
        <div class="card card-widget widget-user-2 shadow">
            <!-- Add the bg color to the header using any of the bg-* classes -->
            <div class="widget-user-header bg-warning">
                
                <div class="widget-user-image">
                    <img class="img-circle elevation-2" src="~/img/avatar5.png" width="50px" alt="User Avatar">
                </div>
                <!-- /.widget-user-image -->
                <h3 class="widget-user-username">
                    Nadia Carmichael
                    <button class="btn btn-primary float-right" data-toggle="modal" data-target="#newToDoListModal">Yeni Liste Ekle</button>
                </h3>
                @*<h5 class="widget-user-desc">Lead Developer</h5>*@

                <br />

                <div class="card-tools float-right">
                    <ul class="pagination pagination-sm">
                        @if (pagination.HasPreviousPage)
                        {
                            <li class="page-item"><a asp-action="List" asp-route-pageSize="@pagination.PageSize" asp-route-currentPageIndex="@(pagination.CurrentPageIndex - 1)" class="page-link">&laquo;</a></li>    
                        }

                        @{
                            var visiblePageIndexCount = 3; // odd numbers results well
                            var firstPageIndex = pagination.GetFirstPageIndex(visiblePageIndexCount);
                            var lastPageIndex = pagination.GetLastPageIndex(visiblePageIndexCount);
                        }
                        @for (int i = firstPageIndex; i <= lastPageIndex; i++)
                        {
                            <li class="page-item">
                                @if (i == pagination.CurrentPageIndex)
                                {
                                    <span class="page-link text-muted bg-info">@i</span>
                                }
                                else
                                {
                                    <a asp-action="List" asp-route-pageSize="@pagination.PageSize" asp-route-currentPageIndex="@i" class="page-link">@i</a>
                                }
                            </li>
                        }
                        
                        @if (pagination.HasNextPage)
                        {
                            <li class="page-item"><a asp-action="List" asp-route-pageSize="@pagination.PageSize" asp-route-currentPageIndex="@(pagination.CurrentPageIndex + 1)" class="page-link">&raquo;</a></li>    
                        }
                    </ul>
                </div>
            </div>
            
            <div class="card-footer p-0">
                <ul class="nav flex-column">
                    @if (Model.HasError == false)
                    {
                        foreach(var toDoListOutputDto in Model.Result!.data)
                        {
                            <li class="nav-item">
                                <a asp-controller="ToDoItem" asp-action="List" asp-route-toDoListId="@toDoListOutputDto.Id" class="nav-link">
                                    @toDoListOutputDto.Name <span class="float-right badge bg-primary">@toDoListOutputDto.ItemCount</span>
                                </a>
                            </li>
                        }   
                    }
                </ul>
            </div>
        </div>
        <!-- /.widget-user -->
    </div>
    <!-- /.col -->
</div>


<div class="modal fade" id="newToDoListModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Yeni Liste Ekle</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <label for="listNameInput" class="form-label">Liste İsmi :</label>
                    <input type="text" class="form-control" id="listNameInput" />
                </div>
            </div>
        </div>
      </div>
      <div class="modal-footer">
        <button id="saveChangesButton" type="button" class="btn btn-primary">Save changes</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

@section Scripts{
    <script>
        
        $("#saveChangesButton").click(function(){
            $.ajax({
              method: "POST",
              url: "@Url.Action("AddToDoList", "ToDoList")",
              data: { 
                  name: $("#listNameInput").val() 
              }
            }).done(function( resultEnvelope, status, xhr ) {
                //Swal.fire(
                //        'Hata',
                //        JSON.stringify(result),
                //        'error'
                //    );
                //return;
                if(resultEnvelope.hasError){
                    Swal.fire(
                        'Hata',
                        resultEnvelope.exceptionMessage + '<br/>' + resultEnvelope.exceptionStackTrace,
                        'error'
                    );
                }else{
                    Swal.fire(
                        'Başarılı',
                        'Liste ismi başarıyla kaydedildi.',
                        'success'
                    ).then(() => {
                        $('#newToDoListModal').modal('toggle')
                        location.reload();
                    });
                    //$("#creditCardTypeTable").DataTable().ajax.reload();
                }
            }).fail(function(xhr, status, error){
                Swal.fire(
                    'Hata',
                    xhr.responseText,
                    'error'
                );
            });
        });
    </script>
}
